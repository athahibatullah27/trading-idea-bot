server {
    listen 80;
    server_name 159-223-52-145.nip.io;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name 159-223-52-145.nip.io;

    # Let's Encrypt SSL configuration
    ssl_certificate /etc/letsencrypt/live/159-223-52-145.nip.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/159-223-52-145.nip.io/privkey.pem;
    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # Proxy to your Docker container
    location /api/ {
        proxy_pass http://localhost:3001/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Remove duplicate CORS headers - let Express handle CORS
        # The Express server already sends CORS headers, so we don't need to add them here
    }
}